---
- name: Create samba directory {{ roon_samba_path }}
  ansible.builtin.file:
    path: "{{ roon_samba_path }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode:  0775
  become: true

- name: Create samba user
  ansible.builtin.user:
    name: "{{ roon_samba_media_user.name }}"
    password: "!" # disabled
    shell: /sbin/nologin
    create_home: false
  become: true
  register: user

- name: Record uid and gid for samba user
  ansible.builtin.set_fact:
    roon_samba_media_user: "{{ roon_samba_media_user | combine({ \
      'uid': user.uid, \
      'gid': user.group \
     }) }}"

- name: Deploy samba user file
  notify: roon_samba_restart_required
  ansible.builtin.template:
    src: smb-users.j2
    dest: "{{ roon_samba_path }}/smb-users"
  
- name: Create directory {{ roon_samba_path }}/smb.conf.d
  ansible.builtin.file:
    path: "{{ roon_samba_path }}/smb.conf.d"
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Deploy samba configuration 10-smb.roon.conf
  notify: roon_samba_restart_required
  ansible.builtin.template:
    src:  smb.roon.conf.j2
    dest: "{{ roon_samba_path }}/smb.conf.d/10-smb.roon.conf"
  
- name: Deploy samba appendix 20-smb.appendix.conf
  when: roon_samba_conf_appendix_template
  ansible.builtin.template:
    src: "{{ roon_samba_conf_appendix_template }}"
    dest: "{{ roon_samba_path }}/smb.conf.d/20-smb.appendix.conf"

- name: Combine configuration files into 'smb.conf'
  notify: roon_samba_restart_required
  ansible.builtin.assemble:
    src: "{{ roon_samba_path }}/smb.conf.d"
    dest: "{{ roon_samba_path }}/smb.conf"
    regexp: "^(?:\\d+-)?smb\\..*\\.conf$"

- name: Docker pull elgeeko/samba:{{ samba_docker_tag }}
  notify: roon_samba_restart_required
  community.general.docker_image:
    name: elgeeko/samba:{{ samba_docker_tag }}
    source: pull
    force_source: true

- name: Flush handlers to set variable roon_samba_restart_required
  ansible.builtin.meta: flush_handlers

- name: Start samba docker container
  community.general.docker_container:
    name: samba
    image: elgeeko/samba:{{ samba_docker_tag }}
    state: started
    recreate: "{{ roon_samba_restart_required }}"
    restart_policy: unless-stopped
    cleanup: true
    keep_volumes: false
    hostname: "{{ roon_hostname }}"
    network_mode: host
    # ports:
    #   - 137:137/udp # netbios name service (WINS)
    #   - 138:138/udp # netbios datagram service
    #   - 139:139/tcp # netbios session service
    #   - 445:445/tcp # samba via TCP
    volumes: "{{ 
        roon_samba_volumes + roon_samba_extra_volumes
        + [ '/etc/localtime:/etc/localtime:ro',
            '/etc/timezone:/etc/timezone:ro' ]
      }}"
